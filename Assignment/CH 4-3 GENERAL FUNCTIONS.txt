1 DISPLAY FIRST_NAME , COMMISSION_PCT AND THIRD COLUMN WHERE NULL VALUE WILL BE REPLACE WITH .1
SELECT FIRST_NAME,COMMISSION_PCT ,NVL(COMMISSION_PCT,.1) FROM EMPLOYEES;	//Donee

2 DISPLAY LAST_NAME , COMMISSION_PCT AND THIRD COLUMN WHICH WILL DISPLAY YES FOR THOSE WHO GETS COMMISSION AND NO FOR REMAINING
SELECT LAST_NAME,COMMISSION_PCT,NVL2(TO_CHAR(COMMISSION_PCT),'YES','NO') FROM EMPLOYEES; //NVL2(COLUMN,NON-NULL,NULL)

3 COMPARE SECOND LAST CHARACTER OF FIRST_NAME AND LAST_NAME, DISPLAY NULL IF BOTH ARE IDENTICAL, OTHERWISE DISPLAY SECOND LAST CHARACTER OF LAST_NAME.  // JODDDDD!!!!!
SELECT FIRST_NAME,LAST_NAME,SUBSTR(FIRST_NAME,-2,1),SUBSTR(LAST_NAME,-2,1),NVL2(NULLIF(SUBSTR(FIRST_NAME,-2,1),SUBSTR(LAST_NAME,-2,1)),SUBSTR(LAST_NAME,-2,1),'IDENTICAL') FROM EMPLOYEES;

4 DISPLAY NAME AND SINGLE CONTACTNO FOR EACH USING CONTACTNO TABLE. THE PREFERENCE IS OPHONE, RPHONE AND MOBILE.
SELECT NAME , COALESCE(MOBILE,OPHONE,RPHONE) CONTACTNO FROM CONTACTNO;

5 DISPLAY LAST_NAME , DEPARTMENT_ID , SALARY AND NEW SALARY AS STATED : FOR DEPT 50 +2000, FOR DEPT 60 +1500 , FOR DEPT 90 +1000 AND FOR REMAINING +500 AS INCREMENT
SELECT LAST_NAME,DEPARTMENT_ID,SALARY,
	DECODE(DEPARTMENT_ID    ,50,SALARY+2000
				,60,SALARY+1500
				,90,SALARY+1000,SALARY+500) "NEW SALARY" FROM EMPLOYEES; //ESY O WOTTT

6 DISPLAY FIRST_NAME , JOB_ID , SALARY AND NEW SALARY BASED ON JOB_ID : FOR IT_PROG 30% , FOR ST_CLERK 40% , FOR SA_REP 20% , NO INCREMENT FOR OTHERS
SELECT LAST_NAME,JOB_ID,SALARY,
	DECODE(JOB_ID           ,'IT_PROG'  ,SALARY*1.3
				,'ST_CLERK' ,SALARY+1.4
				,'SA_REP'   ,SALARY*1.2,SALARY) "NEW SALARY" FROM EMPLOYEES;

7 DISPLAY FIRST_NAME , SALARY , NEW SALARY BY ADDING INCREMENT LIKE THIS : FOR SALARY UPTO 6000 +2000 , FOR SALARY 6001 - 10000 +1500 , FOR SALARY 10001 - 15000 +1000 FOR REMAINING +500
SELECT LAST_NAME,SALARY,
	CASE    WHEN SALARY <=6000                  THEN SALARY+2000
		WHEN SALARY BETWEEN 6001 AND 10000  THEN SALARY+1500
		WHEN SALARY BETWEEN 10001 AND 15000 THEN SALARY+1000 ELSE SALARY+500 END "NEW SALARY" FROM EMPLOYEES;
8 DISPLAY FIRST_NAME , YEAR OF JOINING , SALARY AND NEW SALARY. IF YEAR OF JOINING IS BEFORE 90 +2000 , IF YOJ BETWEEN 91 -95 +1500 , IF YOJ BETWEEN 96-98 +1000 FOR REMAINING +500
SELECT  FIRST_NAME,SUBSTR(HIRE_DATE,8,2),SALARY,
		CASE WHEN SUBSTR(HIRE_DATE,8,2)<90 			               THEN SALARY+2000
		     WHEN SUBSTR(HIRE_DATE,8,2) BETWEEN 91 AND 95                      THEN SALARY+1500
		     WHEN SUBSTR(HIRE_DATE,8,2) >=96 AND SUBSTR(HIRE_DATE,8,2)<=98     THEN SALARY+1000 ELSE SALARY+500 END "NEW SALARY" FROM EMPLOYEES;

9 DISPLAY LAST_NAME , FIRST CHARACTER OF LAST_NAME , SALARY AND NEW SALARY. IF FIRST CHARACTER IS BETWEEN A-F 40% , G-M 30% , N-S 20% , 10% FOR REMAINING
SELECT LAST_NAME,SUBSTR(LAST_NAME,1,1),SALARY,
		CASE    WHEN SUBSTR(LAST_NAME,1,1) >='A' AND SUBSTR(LAST_NAME,1,1) <='F' THEN SALARY*1.4
			WHEN SUBSTR(LAST_NAME,1,1) >='G' AND SUBSTR(LAST_NAME,1,1) <='M' THEN SALARY*1.3
			WHEN SUBSTR(LAST_NAME,1,1) >='N' AND SUBSTR(LAST_NAME,1,1) <='S' THEN SALARY*1.2 ELSE SALARY*1.1 END FROM EMPLOYEES;
			

10 DISPLAY FIRST_NAME , LENGTH OF FIRST_NAME , SALARY , IF LENGTH OF FIRST_NAME IS UPTO 4 +4000 , IF 5-6 + 3000 , 7 AND MORE +2000
SELECT FIRST_NAME,LENGTH(FIRST_NAME),SALARY,
		CASE    WHEN LENGTH(FIRST_NAME)<=4              THEN SALARY+4000
			WHEN LENGTH(FIRST_NAME) BETWEEN 5 AND 6 THEN SALARY+3000
			WHEN LENGTH(FIRST_NAME) >=7             THEN SALARY+2000 END "NEW SALARY" FROM EMPLOYEES; //LENGHT FUNCTION OP!!	 

11 DISPLAY COMMISSION_PCT AND NEW COMMISSION REPLACE NULLS WITH 0 (ZERO)
SELECT FIRST_NAME,COMMISSION_PCT,NVL(TO_CHAR(COMMISSION_PCT),'ZERO') FROM EMPLOYEES;

12 DISPLAY COMMISSION_PCT AND NEW COMMISSION (REPLACE NULLS WITH .1 AND NON NULLS WITH COMMISSION_PCT + .2)
SELECT FIRST_NAME,COMMISSION_PCT,NVL2(COMMISSION_PCT,.2,.1) FROM EMPLOYEES;  //DONEEEE

13 COMPARE SECOND LAST CHARACTER OF FIRST_NAME AND LAST_NAME , IF BOTH ARE IDENTICAL DISPLAY NULL ELSE DISPLAY LAST_NAME'S SECOND LAST CHARACTER.
SELECT FIRST_NAME,LAST_NAME,SUBSTR(FIRST_NAME,-2,1),SUBSTR(LAST_NAME,-2,1),NVL2(NULLIF(SUBSTR(FIRST_NAME,-2,1),SUBSTR(LAST_NAME,-2,1)),'SUBSTR(LAST_NAME,-2,1)','NULL') FROM EMPLOYEES;

14 COMPARE SECOND LAST CHARACTER OF FIRST_NAME AND LAST_NAME , IF BOTH ARE IDENTICAL DISPLAY 'EQUAL' ELSE 'DIFFERENT'.
SELECT FIRST_NAME,LAST_NAME,SUBSTR(FIRST_NAME,-2,1),SUBSTR(LAST_NAME,-2,1),NVL2(NULLIF(SUBSTR(FIRST_NAME,-2,1),SUBSTR(LAST_NAME,-2,1)),'DIFFERENT','EQUAL') FROM EMPLOYEES;  //USE OF SUBSTR 																				    FUCNTION IS OVER POWERED

15 DISPLAY DEPARTMENT_ID , SALARY , NEW SALARY (DEPARTMENT_ID = 50 , +500 , = 60 , + 600 , 80 , + 800 REMAINING + 1000) (USE DECODE)
SELECT LAST_NAME,DEPARTMENT_ID,SALARY,
	DECODE(DEPARTMENT_ID    ,50,SALARY+500
				,60,SALARY+600
				,80,SALARY+800,SALARY+1000) "NEW SALARY" FROM EMPLOYEES;

16 DISPLAY JOB_ID , SALARY , NEW SALARY (JOB_ID = 'IT_PROG' , + 30% , 'ST_CLERK' , +40% , SA_REP , +20% , AD_VP , 10% , REMAINING NO INCREMENT) (USE CASE)
SELECT LAST_NAME,JOB_ID,SALARY,
	CASE JOB_ID     WHEN 'IT_PROG'  THEN SALARY*1.3
			WHEN 'ST_CLERK' THEN SALARY+1.4
			WHEN 'SA_REP'   THEN SALARY*1.2
			WHEN 'AD_VP'    THEN SALARY*1.1 ELSE SALARY END FROM EMPLOYEES;

17 DISPLAY SALARY AND NEW SALARY (SALARY RANGE 0-6000 40% , 6001-10000 30% , 10001-15000 20%, REMAINING 15%)
SELECT LAST_NAME,SALARY,
	CASE      WHEN SALARY <=6000                  THEN SALARY*1.4
		  WHEN SALARY BETWEEN 6001 AND 10000  THEN SALARY*1.3
		  WHEN SALARY BETWEEN 10001 AND 15000 THEN SALARY * 1.2 ELSE SALARY*1.15 END "NEW SALARY" FROM EMPLOYEES;

18 DISPLAY HIRE YEAR , SALARY , NEW SALARY (YEAR RANGE UPTO 1990 +1500 , 1991-1994 +1200, 1995-1998 +900, REMAINING +600)
SELECT HIRE_DATE,SALARY,
	CASE      WHEN HIRE_DATE<='31-DEC-1990'                          THEN SALARY*1.4
		  WHEN HIRE_DATE BETWEEN '01-JAN-1991' AND '31-DEC-1994' THEN SALARY*1.3
		  WHEN HIRE_DATE BETWEEN '01-JAN-1995' AND '31-DEC-1998' THEN SALARY * 1.2 ELSE SALARY*1.15 END "NEW SALARY" FROM EMPLOYEES;


19 DISPLAY MANAGER_ID , SALARY , NEW SALARY (MANAGER_ID 100 40%, 124 30%, 149 20%, REMAINING 5%)      // ESYYYY O WOTTT!!!!!!!!
SELECT MANAGER_ID,SALARY,
	CASE MANAGER_ID WHEN 100 THEN SALARY*1.4
			WHEN 124 THEN SALARY*1.3
			WHEN 149 THEN SALARY*1.2 ELSE SALARY*1.05 END "NEW SALARY" FROM EMPLOYEES

20 DISPLAY COMMISSION_PCT AND EXTRA COLUMN IN WHICH IT SHOULD DISPLAY 'YES' IF COMMISSION_PCT IS NOT NULL OR 'NO' IF COMMISSION_PCT IS NULL (DON'T USE NVL2)
SELECT FIRST_NAME,COMMISSION_PCT,
       CASE WHEN COMMISSION_PCT IS NULL     THEN     'NO'
            WHEN COMMISSION_PCT IS NOT NULL THEN     'YES' END "EXTRA DATA" FROM EMPLOYEES;

21 DISPLAY FIRST_NAME , HIRE_DATE AND 'FIRST' IF EMPLOYEE IS HIRED IN FIRST HALF OF MONTH ELSE 'SECOND'. (USING NULLIF)   // OP BOLTE!!!!!! LOGIC BOLTE!!!!!!
SELECT FIRST_NAME,HIRE_DATE,NVL2(NULLIF(TRUNC(HIRE_DATE,'Q'),ROUND(HIRE_DATE,'Q')),'SECOND','FIRST') FROM EMPLOYEES;

22 DISPLAY FIRST_NAME , HIRE_DATE AND 'FIRST' IF EMPLOYEE IS HIRED IN FIRST HALF OF QUARTER ELSE 'SECOND'. (USING DECODE)
SELECT FIRST_NAME,HIRE_DATE, SUBSTR(ROUND(HIRE_DATE,'Q'),4,3),
        CASE WHEN SUBSTR(ROUND(HIRE_DATE,'Q'),4,3)=SUBSTR(HIRE_DATE,4,3)  THEN 'FIRST' 
             WHEN SUBSTR(ROUND(HIRE_DATE,'Q'),4,3)^=SUBSTR(HIRE_DATE,4,3) THEN 'SECOND' END "REQUIRED FORMAT"  FROM EMPLOYEES;

//JORRR QUESTION

23 DISPLAY FIRST_NAME , HIRE_DATE AND 'FIRST' IF EMPLOYEE IS HIRED IN FIRST HALF OF YEAR ELSE 'SECOND'. (USING CASE)

->WITH THE USE OF TRUNC AND ROUND IT IS DAMMMMM EASYYYYY

SELECT FIRST_NAME,HIRE_DATE,
       CASE WHEN TRUNC(HIRE_DATE,'RRRR') =  ROUND(HIRE_DATE,'RRRR')  THEN 'FIRST'
            WHEN TRUNC(HIRE_DATE,'RRRR') <> ROUND(HIRE_DATE,'RRRR')  THEN 'SECOND' END "HALF" FROM EMPLOYEES;

->WITH THE USE OF SUBSTR IT'S QUIET COMPLEX BUT STILL YE AANA HI BADI BAAT HAI HEHEHE OP!!!!!!!!!!!!!!!!!!!


SELECT FIRST_NAME,HIRE_DATE,SUBSTR(ROUND(HIRE_DATE,'RR'),8,2),SUBSTR(TRUNC(HIRE_DATE,'RR'),8,2),
		CASE WHEN SUBSTR(ROUND(HIRE_DATE,'RR'),8,2)=SUBSTR(TRUNC(HIRE_DATE,'RR'),8,2)+1 THEN 'SECOND'
                     WHEN SUBSTR(ROUND(HIRE_DATE,'RR'),8,2)=SUBSTR(TRUNC(HIRE_DATE,'RR'),8,2)   THEN 'FIRST' END "REQUIRED FORMAT" FROM EMPLOYEES;

//USE OF SUBSTR IS VERY VERY IMPORTANT
