1 DISPLAY ONLY THOSE DEPARTMENT_NAME IN WHICH NO EMPLOYEE IS HIRED
SELECT DEPARTMENT_NAME FROM EMPLOYEES
RIGHT JOIN DEPARTMENTS USING(DEPARTMENT_ID) WHERE EMPLOYEE_ID IS NULL;

2 DISPLAY ONLY THOSE EMPLOYEE FIRST_NAME WHOSE DEPARTMENT_ID IS NOT YET DECIDED
SELECT FIRST_NAME FROM EMPLOYEES
LEFT JOIN DEPARTMENTS USING(DEPARTMENT_ID) WHERE DEPARTMENT_ID IS NULL;

3 DISPLAY THOSE REGION_NAME IN WHICH NO COUNTRY EXISTS
SELECT REGION_NAME FROM REGIONS
LEFT JOIN COUNTRIES USING(REGION_ID) WHERE COUNTRY_ID IS NULL;

4 DISPLAY THOSE FIRST_NAME WHO HAVE NOT GOT ANY PROMOTION
SELECT FIRST_NAME FROM EMPLOYEES
LEFT OUTER JOIN JOB_HISTORY USING (EMPLOYEE_ID)
WHERE START_DATE IS NULL;

5 DISPLAY ONLY THOSE COUNTRY_NAME IN WHICH NO LOCATION IS FIXED
SELECT COUNTRY_NAME FROM COUNTRIES
LEFT JOIN LOCATIONS USING(COUNTRY_ID) WHERE LOCATION_ID IS NULL;

6 DISPLAY THOSE EMPLOYEE FIRST_NAME WHO HAVE GOT PROMOTION
SELECT DISTINCT FIRST_NAME FROM EMPLOYEES RIGHT
JOIN JOB_HISTORY USING (EMPLOYEE_ID);

7 DISPLAY THE GRADE INFO. FROM JOB_GRADES TABLE, IN WHICH NO EMPLOYEE IS GETTING SALARY
SELECT GRADE_LEVEL FROM JOB_GRADES
LEFT JOIN EMPLOYEES ON SALARY BETWEEN LOWEST_SAL AND HIGHEST_SAL 
WHERE EMPLOYEE_ID IS NULL;

8 DISPLAY FIRST_NAME , DEPARTMENT_NAME , DEPARTMENT_ID , BOTH MANAGER_ID (USE USING CLAUSE) DISPLAY EXTRA FIRST_NAME.
SELECT FIRST_NAME,DEPARTMENT_NAME,DEPARTMENT_ID,EMPLOYEES.MANAGER_ID,DEPARTMENTS.MANAGER_ID FROM EMPLOYEES
LEFT JOIN DEPARTMENTS USING(DEPARTMENT_ID);

9 DISPLAY FIRST_NAME , DEPARTMENT_NAME , DEPARTMENT_ID , BOTH MANAGER_ID (DON'T USE USING CLAUSE) DISPLAY EXTRA DEPARTMENT_NAME.
SELECT E.FIRST_NAME,D.DEPARTMENT_NAME,D.DEPARTMENT_ID,E.MANAGER_ID,D.MANAGER_ID FROM EMPLOYEES E
RIGHT JOIN DEPARTMENTS D ON D.DEPARTMENT_ID=E.DEPARTMENT_ID;

10 DISPLAY DEPARTMENT_NAME IN WHICH NO EMPLOYEE IS HIRED
SELECT DEPARTMENT_NAME FROM EMPLOYEES
RIGHT JOIN DEPARTMENTS USING(DEPARTMENT_ID) WHERE EMPLOYEE_ID IS NULL;

11 DISPLAY THOSE REGION_NAME IN WHICH NO CITY EXISTS
SELECT REGION_NAME FROM REGIONS
LEFT JOIN COUNTRIES USING(REGION_ID) WHERE COUNTRY_ID IS NULL;

12 JOIN EMPLOYEES AND DEPARTMENTS TABLE, DISPLAY EXTRA ROWS OF EMPLOYEES TABLE
SELECT * FROM EMPLOYEES E
LEFT JOIN DEPARTMENTS D ON E.DEPARTMENT_ID=D.DEPARTMENT_ID;

13 JOIN EMPLOYEES AND DEPARTMENTS TABLE, DISPLAY EXTRA ROWS OF BOTH TABLES          // FOR EXTRA ROWS OF BOTH TABLE FULL KEYWORD IS USED
SELECT * FROM EMPLOYEES E
FULL JOIN DEPARTMENTS D ON E.DEPARTMENT_ID=D.DEPARTMENT_ID WHERE E.EMPLOYEE_ID IS NULL OR D.DEPARTMENT_ID IS NULL;

14 DISPLAY ONLY THOSE DEPARTMENT_NAME, IN WHICH NO ONE IS HIRED
SELECT DEPARTMENT_NAME FROM EMPLOYEES
RIGHT JOIN DEPARTMENTS USING(DEPARTMENT_ID) WHERE EMPLOYEE_ID IS NULL;

15 DISPLAY EMPLOYEE'S FIRST_NAME , MANAGER'S FIRST_NAME
SELECT E.FIRST_NAME EMP_NAME,M.FIRST_NAME MGR_NAME
FROM EMPLOYEES E JOIN EMPLOYEES M ON E.MANAGER_ID=M.EMPLOYEE_ID;

16 DISPLAY EMPLOYEE'S FIRST_NAME , EMPLOYEES' SALARY,  MANAGER'S FIRST_NAME, MANAGER'S SALARY
SELECT E.FIRST_NAME EMP_NAME,M.FIRST_NAME MGR_NAME,E.SALARY EMP_SALARY,M.SALARY MGR_SALARY
FROM EMPLOYEES E JOIN EMPLOYEES M ON E.MANAGER_ID=M.EMPLOYEE_ID;

17 DISPLAY EMPLOYEE'S FIRST_NAME , EMPLOYEES' SALARY, EMPLOYEE'S JOB_TITLE, MANAGER'S FIRST_NAME, MANAGER'S SALARY, MANAGER'S JOB_TITLE
SELECT E.FIRST_NAME EMP_NAME,M.FIRST_NAME MGR_NAME,E.SALARY EMP_SALARY,M.SALARY MGR_SALARY,EJ.JOB_TITLE EMP_JOB_TITLE,MJ.JOB_TITLE MGR_JOB_TITLE
FROM EMPLOYEES E JOIN EMPLOYEES M ON E.MANAGER_ID=M.EMPLOYEE_ID
JOIN JOBS EJ ON E.JOB_ID=EJ.JOB_ID
JOIN JOBS MJ ON M.JOB_ID=MJ.JOB_ID;

18 DISPLAY EMPLOYEE'S FIRST_NAME , EMPLOEYES' SALARY, EMPLOYEE'S JOB_TITLE,EMPLOYEE'S GRADE_LEVEL  MANAGER'S FIRST_NAME, MANAGER'S SALARY, MANAGER'S JOB_TITLE , MANAGER'S GRADE_LEVEL
SELECT E.FIRST_NAME EMP_NAME,M.FIRST_NAME MGR_NAME,E.SALARY EMP_SALARY,M.SALARY MGR_SALARY,EJ.JOB_TITLE EMP_JOB_TITLE,MJ.JOB_TITLE MGR_JOB_TITLE,EJG.GRADE_LEVEL EMP_GRADE_LEVEL,MJG.GRADE_LEVEL MGR_GRADE_LEVEL
FROM EMPLOYEES E JOIN EMPLOYEES M ON E.MANAGER_ID=M.EMPLOYEE_ID
JOIN JOBS EJ ON E.JOB_ID=EJ.JOB_ID
JOIN JOBS MJ ON M.JOB_ID=MJ.JOB_ID
JOIN JOB_GRADES EJG ON E.SALARY BETWEEN EJG.LOWEST_SAL AND EJG.HIGHEST_SAL
JOIN JOB_GRADES MJG ON M.SALARY BETWEEN MJG.LOWEST_SAL AND MJG.HIGHEST_SAL;                 // SELF JOIN BOLTE!!!!!!

19 DISPLAY ONLY THOSE REGION_NAME IN WHICH NO COUNTRY EXISTS.
SELECT REGION_NAME FROM REGIONS
LEFT JOIN COUNTRIES USING(REGION_ID) WHERE COUNTRY_ID IS NULL;