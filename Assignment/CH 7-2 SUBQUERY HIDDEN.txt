1 DISPLAY THOSE EMPLOYEES WHO GETS HIGHER SALARY THAN ALL EMPLOYEES OF DEPARTMENT 50
SELECT FIRST_NAME FROM EMPLOYEES WHERE SALARY > (SELECT SALARY FROM EMPLOYEES WHERE DEPARTMENT_ID=50);

2 DISPLAY ALL EMPLOYEES WHO WERE HIRED BEFORE Diana
SELECT FIRST_NAME,HIRE_DATE FROM EMPLOYEES WHERE HIRE_DATE < (SELECT HIRE_DATE FROM EMPLOYEES WHERE LAST_NAME='Diana');

3 DISPLAY THOSE EMPLOYEES WHO WORKS IN Executive DEPARTMENT
SELECT FIRST_NAME FROM EMPLOYEES WHERE DEPARTMENT_ID = ANY(SELECT DEPARTMENT_ID FROM DEPARTMENTS WHERE DEPARTMENT_NAME='Executive');

4 DISPLAY THOSE WHO WORKS IN Toronto CITY
SELECT FIRST_NAME FROM EMPLOYEES WHERE DEPARTMENT_ID = ANY(SELECT DEPARTMENT_ID FROM DEPARTMENTS WHERE LOCATION_ID IN (SELECT LOCATION_ID FROM LOCATIONS WHERE CITY='Toronto'));

5 DISPLAY THOSE WHO GETS LOWEST SALARY IN THEIR DEPARTMENT
SELECT FIRST_NAME FROM EMPLOYEES WHERE SALARY IN (SELECT MIN(SALARY) FROM EMPLOYEES GROUP BY DEPARTMENT_ID);

6 DISPLAY THOSE WHO GET HIGHEST SALARY FOR THEIR JOB_ID
SELECT FIRST_NAME FROM EMPLOYEES WHERE SALARY IN (SELECT MAX(SALARY) FROM EMPLOYEES GROUP BY JOB_ID);

7 DISPLAY THOSE WHO GETS LOWEST SALARY FOR THEIR MANAGER
SELECT FIRST_NAME FROM EMPLOYEES WHERE (MANAGER_ID,SALARY) = ANY(SELECT MANAGER_ID,MIN(SALARY) FROM EMPLOYEES GROUP BY MANAGER_ID);

8 DISPLAY THOSE WHO GETS HIGHEST SALARY FOR THEIR HIRE YEAR
SELECT FIRST_NAME FROM EMPLOYEES WHERE SALARY =ANY (SELECT MAX(SALARY) FROM EMPLOYEES GROUP BY TO_CHAR(HIRE_DATE,'RRRR'));

9 DISPLAY FIRST_NAME AND SALARY FOR THE EMPLOYEES WHO GETS HIGHEST SALARY QUARTER WISE (IGNORE YEAR)
SELECT FIRST_NAME,SALARY FROM EMPLOYEES WHERE SALARY =ANY (SELECT MAX(SALARY) FROM EMPLOYEES GROUP BY TO_CHAR(HIRE_DATE,'Q'));

10 DISPLAY FIRST_NAME FOR THE EMPLOYEES WHO WORKS IN United States of America
SELECT FIRST_NAME FROM EMPLOYEES WHERE
DEPARTMENT_ID IN (SELECT DEPARTMENT_ID FROM DEPARTMENTS WHERE
LOCATION_ID IN (SELECT LOCATION_ID FROM LOCATIONS WHERE CITY='United States of America'));

11 DISPLAY LAST_NAME FOR THE EMPLOYEES WHO WORKS IN Europe
SELECT LAST_NAME FROM EMPLOYEES WHERE
DEPARTMENT_ID IN (SELECT DEPARTMENT_ID FROM DEPARTMENTS WHERE
LOCATION_ID IN (SELECT LOCATION_ID FROM LOCATIONS WHERE
COUNTRY_ID IN (SELECT COUNTRY_ID FROM COUNTRIES WHERE
REGION_ID IN (SELECT REGION_ID FROM REGIONS WHERE REGION_NAME = 'Europe'))));

12 DISPLAY FIRST_NAME , JOB_ID FOR THE EMPLOYEES WHO WORKS AS Programmer
SELECT FIRST_NAME,JOB_ID FROM EMPLOYEES WHERE JOB_ID IN (SELECT JOB_ID FROM JOBS WHERE JOB_TITLE='Programmer'); 

13 DISPLAY DEPARTMENT_NAME WHICH IS LOCATED IN Canada
SELECT DEPARTMENT_NAME FROM DEPARTMENTS WHERE
LOCATION_ID IN (SELECT LOCATION_ID FROM LOCATIONS WHERE
COUNTRY_ID IN (SELECT COUNTRY_ID FROM COUNTRIES WHERE COUNTRY_NAME = 'Canada'));

14 DISPLAY CITY WHICH IS LOCATED IN Europe
SELECT CITY FROM LOCATIONS WHERE COUNTRY_ID IN (SELECT COUNTRY_ID FROM COUNTRIES
WHERE REGION_ID IN (SELECT REGION_ID FROM REGIONS WHERE REGION_NAME = 'Europe'));

15 DISPLAY THOSE WHO REPORTS TO ANY MANAGER (19 ROWS)
SELECT FIRST_NAME FROM EMPLOYEES WHERE (FIRST_NAME,MANAGER_ID) = ANY(SELECT FIRST_NAME,MANAGER_ID FROM EMPLOYEES);

16 DISPLAY THOSE WHO REPORTS TO ANY DEPARTMENT HEAD (16 ROWS)    // ANY DEPARTMENT HEAD HAI TOH PAIR WISE COMPARISION KI JARURAT NAHI HAI!!!
SELECT FIRST_NAME FROM EMPLOYEES WHERE MANAGER_ID IN (SELECT MANAGER_ID FROM DEPARTMENTS);

17 DISPLAY THOSE WHO REPORTS TO HIS DEPARTMENT'S HEAD (12 ROWS)       // OP!!!!!!!!!!!!
SELECT FIRST_NAME,DEPARTMENT_ID,MANAGER_ID FROM EMPLOYEES WHERE (DEPARTMENT_ID,MANAGER_ID) IN (SELECT DEPARTMENT_ID,MANAGER_ID FROM EMPLOYEES);

18 DISPLAY THOSE EMPLOYEES WHO GETS SALARY IN THE RANGE BETWEEN Shelley and Jennifer.
SELECT FIRST_NAME FROM EMPLOYEES WHERE SALARY BETWEEN (SELECT SALARY FROM EMPLOYEES WHERE FIRST_NAME='Jennifer')
AND (SELECT SALARY FROM EMPLOYEES WHERE FIRST_NAME='Shelley');

19 DISPLAY THOSE WHO WERE JOINED BETWEEN Kimerely and Shelley. (INCLUDING BOTH)
SELECT FIRST_NAME FROM EMPLOYEES WHERE HIRE_DATE >= (SELECT HIRE_DATE FROM EMPLOYEES WHERE FIRST_NAME='Kimerely')
HIRE_DATE <= (SELECT SALARY FROM EMPLOYEES WHERE FIRST_NAME='Shelley');

20 DISPLAY ALL OTHER THAN THOSE WHO GETS SALARY IN THE SALARY RANGE OF Shelley and Kimerely. (LEAST, GREATEST)
SELECT FIRST_NAME FROM EMPLOYEES WHERE SALARY NOT BETWEEN (SELECT SALARY FROM EMPLOYEES WHERE FIRST_NAME='Kimerely')
AND (SELECT SALARY FROM EMPLOYEES WHERE FIRST_NAME='Shelley');

21 DISPLAY ALL WHO GETS SALARY IN GRADE_LEVEL D.
SELECT FIRST_NAME FROM EMPLOYEES WHERE SALARY BETWEEN (SELECT LOWEST_SAL FROM JOB_GRADES WHERE GRADE_LEVEL='D') AND (SELECT HIGHEST_SAL FROM JOB_GRADES WHERE GRADE_LEVEL='D');

IF WANNA SEE GRADE_LEVEL THAN DO IT WITH JOIN

SELECT FIRST_NAME,GRADE_LEVEL FROM EMPLOYEES 
JOIN JOB_GRADES ON SALARY BETWEEN LOWEST_SAL AND HIGHEST_SAL WHERE GRADE_LEVEL='D';

22 DISPLAY ALL WHO GETS SALARY IN THE RANGE OF Sales Manager.
SELECT FIRST_NAME FROM EMPLOYEES WHERE SALARY > (SELECT MIN_SALARY FROM JOBS WHERE JOB_TITLE='Sales Manager') AND SALARY < (SELECT MAX_SALARY FROM JOBS WHERE JOB_TITLE='Sales Manager');

23 DISPLAY ALL OTHER THAN THOSE WHO GETS SALARY IN GRADE_LEVEL C AND E.   // JOIN MOST OP BOLTE!!!!!!!!!!!!!!!!!!!!
SELECT FIRST_NAME,GRADE_LEVEL FROM EMPLOYEES 
JOIN JOB_GRADES ON SALARY BETWEEN LOWEST_SAL AND HIGHEST_SAL WHERE GRADE_LEVEL NOT IN ('C','E');

24 DISPLAY ALL OTHER THAN THOSE WHO GETS SALARY OUTSIDE RANGE OF Programmer.
SELECT FIRST_NAME FROM EMPLOYEES WHERE SALARY NOT BETWEEN (SELECT MIN_SALARY FROM JOBS WHERE JOB_TITLE='Programmer') AND (SELECT MAX_SALARY FROM JOBS WHERE JOB_TITLE='Programmer');

25 DISPLAY ALL WHO GETS SALARY IN THE RANGE OF Sales Representative BUT NOT IN THE RANGE OF Accounting Manager.
SELECT FIRST_NAME FROM EMPLOYEES WHERE SALARY > (SELECT MIN_SALARY FROM JOBS WHERE JOB_TITLE='Sales Representative') AND SALARY < (SELECT MAX_SALARY FROM JOBS WHERE JOB_TITLE='Sales Representative') AND SALARY NOT BETWEEN (SELECT MIN_SALARY FROM JOBS WHERE JOB_TITLE='Accounting Manager') AND (SELECT MAX_SALARY FROM JOBS WHERE JOB_TITLE='Accounting Manager');

